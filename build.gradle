plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'

//	id 'com.github.ben-manes.versions' version '0.39.0'
//	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'skillter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 17

repositories {
	mavenCentral()

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.springframework.boot:spring-boot-devtools'
//	compileOnly 'org.springframework:springloaded:1.2.8.RELEASE'
//	implementation 'org.springframework:spring-webmvc'
//	implementation 'javax.servlet:servlet-api:3.0-alpha-1'

	implementation 'com.h2database:h2'
	implementation 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.register('watchForChanges') {
	doLast {
		var refreshRateMS = 200;
		while (true) {
			def configDir = fileTree("F:\\.Java Workspace\\aboutme\\src\\main\\resources\\templates")
			def changes = configDir.files.findAll { it.lastModified() > new Date().time - refreshRateMS }
			if (!changes.isEmpty()) {
				changes.each { file -> println("Change detected in file: " + file.path)}
				// here implement triggering processResources task
				// welp, there's simply no way to do that, you could use finalizedBy(), but then the current task is finished and there's no way to run it again automatically, spent few hours on this but it has to be abandoned
				// oh you can run the gradle task through the console command, I tried it but did it wrong at first time and wasted 2 hours
				// oh my god it actually works, i hate my job it was so f annoying i'm never touching it again
				var command = "\"" + System.getProperty("user.dir") + "\\gradlew.bat\" processResources"
				command.execute()
			}
			sleep(refreshRateMS)
		}
	}
}




tasks.named('test') {
	useJUnitPlatform()
}
